These files are:

The outer mysite/ root directory is a container for your project. Its name doesn’t matter to Django; you can rename it to anything you like.
manage.py: A command-line utility that lets you interact with this Django project in various ways. You can read all the details about manage.py in django-admin and manage.py.
The inner mysite/ directory is the actual Python package for your project. Its name is the Python package name you’ll need to use to import anything inside it (e.g. mysite.urls).
mysite/__init__.py: An empty file that tells Python that this directory should be considered a Python package. If you’re a Python beginner, read more about packages in the official Python docs.
mysite/settings.py: Settings/configuration for this Django project. Django settings will tell you all about how settings work.
mysite/urls.py: The URL declarations for this Django project; a “table of contents” of your Django-powered site. You can read more about URLs in URL dispatcher.
mysite/asgi.py: An entry-point for ASGI-compatible web servers to serve your project. See How to deploy with ASGI for more details.
mysite/wsgi.py: An entry-point for WSGI-compatible web servers to serve your project. See How to deploy with WSGI for more details.


- Step to create new app inside:
    + Use the django-admin tool to generate a project folder, the basic file templates, and manage.py, which serves as your project management script.
    + Use manage.py to create one or more applications.
    + Register the new applications to include them in the project.
    + Hook up the url/path mapper for each application.

Docker container set up:
-   docker run --name my-postgres -e POSTGRES_PASSWORD=mysecretpassword -p 5432:5432 -e POSTGRES_USER=postgres -d postgres
    + user = postgres
    + password = mysecretpassword
    + port = 5432
    + host = localhost
    + "-d" = Run container in background and print container ID 

Postgres: 
    + Create new database = my_database

Curreunt progress:
    https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django/skeleton_website#registering_the_catalog_application